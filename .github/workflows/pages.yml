# Deploys the site to GitHub Pages whenever you push to the default branch
# Works for any static TypeScript project that ends in compiled files

name: Deploy to GitHub Pages

on:
  push:
    branches: [main]           # change if your default branch is 'master', 'dev', etc.

env:
  # üí° Set this once; every step can reference it.
  node_version: 22.11.0          # or 18.x ‚Äî match your local setup
  build_script: npm run build  # or pnpm build / yarn build
  output_dir: build             # 'build', 'out', etc.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Check out your repo
      - name: Clone source
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install Node.js (cached between runs)
      - name: Set up Node ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: npm               # change to 'pnpm' or 'yarn' if you use those

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm ci                # or 'pnpm i --frozen-lockfile' / 'yarn install --immutable'

      # 4Ô∏è‚É£ Build the production site
      - name: Build website
        run: ${{ env.build_script }}

      # 5Ô∏è‚É£ Deploy the output folder to the gh-pages branch
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.output_dir }}
          publish_branch: gh-pages     # will create the branch if it doesn't exist
          commit_message: "Deploy: ${{ github.sha }}"

      # Optional: keep only the latest 10 commits on gh-pages to avoid branch bloat
      # - name: Slim gh-pages history (optional)
      #   run: |
      #     git config --global user.email "actions@github.com"
      #     git config --global user.name  "GitHub Actions"
      #     git fetch origin gh-pages
      #     git checkout gh-pages
      #     git reset --hard HEAD~10
      #     git push --force